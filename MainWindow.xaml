<Window x:Class="Skill_Loop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Skill_Loop"
        mc:Ignorable="d"
        Title="技能循环助手" Height="700" Width="900" WindowStartupLocation="CenterScreen"
        Icon="app.ico">
    <Window.Resources>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="8 4"/>
            <Setter Property="Background" Value="#4a86e8"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Margin" Value="5 5 0 5"/>
            <Setter Property="Padding" Value="0 5"/>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="AlternatingRowBackground" Value="#f0f0f0"/>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Background="#f5f5f5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- 顶部控制区域 -->
        <Border Grid.Row="0" Background="#2d2d30" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="游戏技能循环助手" 
                           FontSize="18" 
                           FontWeight="Bold" 
                           Foreground="White" 
                           VerticalAlignment="Center"/>

                <StackPanel Grid.Column="1" 
                            Orientation="Horizontal" 
                            HorizontalAlignment="Center">
                    <Label Content="游戏窗口:" Foreground="White"/>
                    <ComboBox x:Name="cbGameWindows" Width="200" 
                              DisplayMemberPath="Title"/>
                    <Button x:Name="btnRefreshWindows" Content="刷新窗口" 
                            Click="RefreshWindows_Click"/>
                </StackPanel>

                <StackPanel Grid.Column="2" 
                            Orientation="Horizontal" 
                            HorizontalAlignment="Right">
                    <Button x:Name="btnSaveConfig" Content="保存配置" 
                            Click="SaveConfig_Click" Background="#27ae60"/>
                    <Button x:Name="btnLoadConfig" Content="加载配置" 
                            Click="LoadConfig_Click" Background="#2980b9"/>
                    <Button x:Name="btnStart" Content="开始循环" 
                            Background="#3cbc53" Click="StartStop_Click"/>
                    <Button x:Name="btnStop" Content="停止循环" 
                            Background="#e74c3c" IsEnabled="False" 
                            Click="StartStop_Click"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- 主内容区域 -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- 规则列表 -->
            <GroupBox Grid.Column="0" Header="技能规则" Margin="5">
                <DockPanel>
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button x:Name="btnAddRule" Content="添加规则" Click="AddRule_Click"/>
                        <Button x:Name="btnRemoveRule" Content="删除规则" Click="RemoveRule_Click"/>
                        <Button x:Name="btnMoveUp" Content="上移" Click="MoveRuleUp_Click"/>
                        <Button x:Name="btnMoveDown" Content="下移" Click="MoveRuleDown_Click"/>
                        <Button x:Name="btnAddCondition" Content="添加条件" Click="AddCondition_Click"/>
                    </StackPanel>

                    <DataGrid x:Name="dgRules" AutoGenerateColumns="False" 
                              ItemsSource="{Binding Rules}">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="启用" Binding="{Binding IsEnabled}" Width="50"/>
                            <DataGridTextColumn Header="技能按键" Binding="{Binding Key}" Width="80"/>
                            <DataGridTextColumn Header="长按" Binding="{Binding IsHoldKey}" Width="50"/>
                            <DataGridTextColumn Header="持续时间" Binding="{Binding HoldDuration}" Width="60"/>
                            <DataGridTextColumn Header="条件数量" Binding="{Binding Conditions.Count}" Width="80"/>
                            <DataGridTemplateColumn Header="操作" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="编辑条件" Click="EditConditions_Click"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </GroupBox>

            <!-- 设置区域 -->

            <StackPanel Grid.Column="1" Width="250" Margin="5">
                <GroupBox Header="全局设置" Margin="0,5">
                    <StackPanel >
                        <Label Content="全局检测频率 (ms):"/>
                        <TextBox x:Name="txtGlobalInterval" Text="50"/>
                        
                        <!-- 添加热键设置 -->
                        <CheckBox x:Name="chkstartCtrl" Content="Ctrl" Margin="0,0,5,0" Checked="CheckBox_CheckedChanged" Unchecked="CheckBox_CheckedChanged"/>
                        <CheckBox x:Name="chkstartShift" Content="Shift" Margin="0,0,5,0" Checked="CheckBox_CheckedChanged" Unchecked="CheckBox_CheckedChanged"/>
                        <CheckBox x:Name="chkstartAlt" Content="Alt" Margin="0,0,5,0" Checked="CheckBox_CheckedChanged" Unchecked="CheckBox_CheckedChanged"/>
                        <Label Content="启动热键:"/>
                        <ComboBox x:Name="cbStartHotKey" SelectedIndex="25" SelectionChanged="HotKeyComboBox_SelectionChanged">
                            <!-- 默认选择波浪号 -->
                            <!-- 数字键 -->
                            <ComboBoxItem>0</ComboBoxItem>
                            <ComboBoxItem>1</ComboBoxItem>
                            <ComboBoxItem>2</ComboBoxItem>
                            <ComboBoxItem>3</ComboBoxItem>
                            <ComboBoxItem>4</ComboBoxItem>
                            <ComboBoxItem>5</ComboBoxItem>
                            <ComboBoxItem>6</ComboBoxItem>
                            <ComboBoxItem>7</ComboBoxItem>
                            <ComboBoxItem>8</ComboBoxItem>
                            <ComboBoxItem>9</ComboBoxItem>

                            <!-- 符号键 -->
                            <ComboBoxItem>;</ComboBoxItem>
                            <!-- 分号 -->
                            <ComboBoxItem>?</ComboBoxItem>
                            <!-- 问号 -->
                            <ComboBoxItem>~</ComboBoxItem>
                            <!-- 波浪号 -->
                            <ComboBoxItem>[</ComboBoxItem>
                            <!-- 正括号 -->
                            <ComboBoxItem>\</ComboBoxItem>
                            <!-- 斜线 -->
                            <ComboBoxItem>]</ComboBoxItem>
                            <!-- 反括号 -->
                            <ComboBoxItem>,</ComboBoxItem>
                            <!-- 逗号 -->
                            <ComboBoxItem>.</ComboBoxItem>
                            <!-- 句号 -->
                            <ComboBoxItem>=</ComboBoxItem>
                            <!-- 等号 -->
                            <ComboBoxItem>-</ComboBoxItem>
                            <!-- 横线 -->

                            <!-- 功能键 -->
                            <ComboBoxItem>F9</ComboBoxItem>
                            <ComboBoxItem>F10</ComboBoxItem>
                            <ComboBoxItem>F11</ComboBoxItem>
                            <ComboBoxItem>F12</ComboBoxItem>

                            <!-- 鼠标键 -->
                            <ComboBoxItem>鼠标中键</ComboBoxItem>
                            <ComboBoxItem>鼠标侧键1</ComboBoxItem>
                            <ComboBoxItem>鼠标侧键2</ComboBoxItem>
                            <ComboBoxItem>鼠标滚轮上</ComboBoxItem>
                            <ComboBoxItem>鼠标滚轮下</ComboBoxItem>

                            <!-- 小键盘 -->
                            <ComboBoxItem>小键盘/</ComboBoxItem>
                            <ComboBoxItem>小键盘*</ComboBoxItem>
                            <ComboBoxItem>小键盘-</ComboBoxItem>
                            <ComboBoxItem>小键盘+</ComboBoxItem>
                            <ComboBoxItem>小键盘.</ComboBoxItem>
                            <ComboBoxItem>小键盘0</ComboBoxItem>
                            <ComboBoxItem>小键盘1</ComboBoxItem>
                            <ComboBoxItem>小键盘2</ComboBoxItem>
                            <ComboBoxItem>小键盘3</ComboBoxItem>
                            <ComboBoxItem>小键盘4</ComboBoxItem>
                            <ComboBoxItem>小键盘5</ComboBoxItem>
                            <ComboBoxItem>小键盘6</ComboBoxItem>
                            <ComboBoxItem>小键盘7</ComboBoxItem>
                            <ComboBoxItem>小键盘8</ComboBoxItem>
                            <ComboBoxItem>小键盘9</ComboBoxItem>
                        </ComboBox>
                        <CheckBox x:Name="chkstopCtrl" Content="Ctrl" Margin="0,0,5,0" Checked="CheckBox_CheckedChanged" Unchecked="CheckBox_CheckedChanged"/>
                        <CheckBox x:Name="chkstopShift" Content="Shift" Margin="0,0,5,0" Checked="CheckBox_CheckedChanged" Unchecked="CheckBox_CheckedChanged"/>
                        <CheckBox x:Name="chkstopAlt" Content="Alt" Margin="0,0,5,0" Checked="CheckBox_CheckedChanged" Unchecked="CheckBox_CheckedChanged"/>
                        <Label Content="停止热键:"/>
                        <ComboBox x:Name="cbStopHotKey" SelectedIndex="25" SelectionChanged="HotKeyComboBox_SelectionChanged">
                            <!-- 默认选择波浪号 -->
                            <!-- 重复上面的选项 -->
                            <ComboBoxItem>0</ComboBoxItem>
                            <ComboBoxItem>1</ComboBoxItem>
                            <ComboBoxItem>2</ComboBoxItem>
                            <ComboBoxItem>3</ComboBoxItem>
                            <ComboBoxItem>4</ComboBoxItem>
                            <ComboBoxItem>5</ComboBoxItem>
                            <ComboBoxItem>6</ComboBoxItem>
                            <ComboBoxItem>7</ComboBoxItem>
                            <ComboBoxItem>8</ComboBoxItem>
                            <ComboBoxItem>9</ComboBoxItem>
                            <ComboBoxItem>;</ComboBoxItem>
                            <ComboBoxItem>?</ComboBoxItem>
                            <ComboBoxItem>~</ComboBoxItem>
                            <ComboBoxItem>[</ComboBoxItem>
                            <ComboBoxItem>\</ComboBoxItem>
                            <ComboBoxItem>]</ComboBoxItem>
                            <ComboBoxItem>,</ComboBoxItem>
                            <ComboBoxItem>.</ComboBoxItem>
                            <ComboBoxItem>=</ComboBoxItem>
                            <ComboBoxItem>-</ComboBoxItem>
                            <ComboBoxItem>F9</ComboBoxItem>
                            <ComboBoxItem>F10</ComboBoxItem>
                            <ComboBoxItem>F11</ComboBoxItem>
                            <ComboBoxItem>F12</ComboBoxItem>
                            <ComboBoxItem>鼠标中键</ComboBoxItem>
                            <ComboBoxItem>鼠标侧键1</ComboBoxItem>
                            <ComboBoxItem>鼠标侧键2</ComboBoxItem>
                            <ComboBoxItem>鼠标滚轮上</ComboBoxItem>
                            <ComboBoxItem>鼠标滚轮下</ComboBoxItem>
                            <ComboBoxItem>小键盘/</ComboBoxItem>
                            <ComboBoxItem>小键盘*</ComboBoxItem>
                            <ComboBoxItem>小键盘-</ComboBoxItem>
                            <ComboBoxItem>小键盘+</ComboBoxItem>
                            <ComboBoxItem>小键盘.</ComboBoxItem>
                            <ComboBoxItem>小键盘0</ComboBoxItem>
                            <ComboBoxItem>小键盘1</ComboBoxItem>
                            <ComboBoxItem>小键盘2</ComboBoxItem>
                            <ComboBoxItem>小键盘3</ComboBoxItem>
                            <ComboBoxItem>小键盘4</ComboBoxItem>
                            <ComboBoxItem>小键盘5</ComboBoxItem>
                            <ComboBoxItem>小键盘6</ComboBoxItem>
                            <ComboBoxItem>小键盘7</ComboBoxItem>
                            <ComboBoxItem>小键盘8</ComboBoxItem>
                            <ComboBoxItem>小键盘9</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="新规则设置" Margin="0,10">
                    <StackPanel>
                        <Label Content="技能按键:"/>
                        <ComboBox x:Name="cbNewKey" SelectedIndex="0">
                            <ComboBoxItem>1</ComboBoxItem>
                            <ComboBoxItem>2</ComboBoxItem>
                            <ComboBoxItem>3</ComboBoxItem>
                            <ComboBoxItem>4</ComboBoxItem>
                            <ComboBoxItem>5</ComboBoxItem>
                            <ComboBoxItem>Q</ComboBoxItem>
                            <ComboBoxItem>E</ComboBoxItem>
                            <ComboBoxItem>Z</ComboBoxItem>
                            <ComboBoxItem>X</ComboBoxItem>
                            <ComboBoxItem>H</ComboBoxItem>
                            <ComboBoxItem>鼠标左键</ComboBoxItem>
                        </ComboBox>
                        <!-- 添加长按设置 -->
                        <CheckBox x:Name="chkIsHoldKey" Content="长按释放" Margin="5"/>
                        <StackPanel Orientation="Horizontal" Visibility="{Binding IsChecked, ElementName=chkIsHoldKey, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="持续时间(秒):"/>
                            <TextBox x:Name="txtHoldDuration" Width="60" Text="1.0" Margin="5,0,0,0"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </Grid>

        <!-- 状态栏 -->
        <StatusBar Grid.Row="2" Background="#e1e1e1">
            <StatusBarItem>
                <TextBlock x:Name="tbStatus" Text="就绪"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="状态:"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock x:Name="tbActive" Text="未运行" Foreground="Gray"/>
            </StatusBarItem>
            <!-- 在Grid的最后添加调试Canvas -->
            <Canvas x:Name="debugCanvas" Grid.Row="1" Grid.ColumnSpan="2" 
        IsHitTestVisible="False" Visibility="Collapsed"/>
            <Button x:Name="btnTestRule" Content="测试规则" 
        Click="btnTestConditions_Click" Margin="5"/>
        </StatusBar>
    </Grid>
</Window>